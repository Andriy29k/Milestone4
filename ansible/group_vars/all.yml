---
ansible_python_interpreter: /usr/bin/python3
k3s_version: "v1.28.3+k3s1"
k3s_install_dir: "/usr/local/bin"
# k3s_token: "{{ lookup('password', '/tmp/k3s_token length=40') }}"  # Видалено або прокоментуй

# PostgreSQL variables
postgres_user: "{{ lookup('env', 'POSTGRES_USER') | default('admin', true) }}"
postgres_password: "{{ lookup('env', 'POSTGRES_PASSWORD') | default('admin', true) }}"
postgres_db: "{{ lookup('env', 'POSTGRES_DB') | default('class_schedule', true) }}"
postgres_storage_size: "1Gi"
postgres_image: "postgres:15"

# Redis variables
redis_image: "{{ lookup('env', 'REDIS_IMAGE') | default('redis:7', true) }}"
redis_port: "6379"
redis_storage_type: "emptyDir"

# Backend variables
backend_image: "{{ lookup('env', 'BACKEND_IMAGE') | default('andriy29k/class_schedule_backend:latest', true) }}"
backend_port: "8080"
db_endpoint: "{{ lookup('env', 'DB_ENDPOINT') | default('jdbc:postgresql://postgres:5432/' + postgres_db, true) }}"
db_username: "{{ postgres_user }}"
db_password: "{{ postgres_password }}"
redis_url: "{{ lookup('env', 'REDIS_URL') | default('redis://redis:6379', true) }}"

# Frontend variables
frontend_image: "{{ lookup('env', 'FRONTEND_IMAGE') | default('andriy29k/class_schedule_frontend:latest', true) }}"
frontend_port: "3000"
backend_url: "{{ lookup('env', 'BACKEND_URL') | default('http://backend:80', true) }}"

# Docker Hub credentials
dockerhub_username: "{{ lookup('env', 'DOCKERHUB_USERNAME') }}"
dockerhub_password: "{{ lookup('env', 'DOCKERHUB_PASSWORD') }}"

# Ingress variables
ingress_backend_path: "/api"
ingress_backend_service: "backend"
ingress_backend_service_port: "80"
ingress_frontend_path: "/"
ingress_frontend_service: "frontend"
ingress_frontend_service_port: "80"
---
- name: Install prerequisites
  apt:
    name:
      - curl
      - iptables
    state: present
    update_cache: yes

- name: Disable SWAP
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Comment out swap in fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s)'
    replace: '# \1'
  when: ansible_swaptotal_mb > 0

- name: Install k3s server
  shell: |
    curl -sfL https://get.k3s.io | sh -
  args:
    creates: /usr/local/bin/k3s
    environment:
      INSTALL_K3S_VERSION: "{{ k3s_version | default('v1.28.3+k3s1') }}"
      INSTALL_K3S_EXEC: "{{ k3s_server_options | default('--cluster-init --disable=traefik --disable=servicelb') }}"
  when: k3s_role == "server"
  register: k3s_server_result
  changed_when: k3s_server_result.rc == 0

- name: Install k3s agent
  shell: |
    curl -sfL https://get.k3s.io | K3S_URL="https://{{ hostvars[groups['control_plane_group'][0]]['ansible_host'] }}:6443" K3S_TOKEN="{{ k3s_token }}" sh -
  args:
    creates: /usr/local/bin/k3s
    environment:
      INSTALL_K3S_VERSION: "{{ k3s_version | default('v1.28.3+k3s1') }}"
  when: k3s_role == "agent"
  register: k3s_agent_result
  changed_when: k3s_agent_result.rc == 0

- name: Ensure k3s service is running (server)
  systemd:
    name: k3s
    state: started
    enabled: yes
  when: k3s_role == "server"

- name: Ensure k3s service is running (agent)
  systemd:
    name: k3s-agent
    state: started
    enabled: yes
  when: k3s_role == "agent"

- name: Create Docker config directory
  file:
    path: /etc/rancher/k3s/
    state: directory
    mode: '0755'
  when: k3s_role == "server" and docker_username is defined and docker_password is defined

- name: Generate Docker config JSON
  template:
    src: config.json.j2
    dest: /etc/rancher/k3s/config.json
    mode: '0600'
  when: k3s_role == "server" and docker_username is defined and docker_password is defined

- name: Download Helm script
  get_url:
    url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    dest: /tmp/get_helm.sh
    mode: '0755'
  when: k3s_role == "server"

- name: Run Helm installation script
  shell: /tmp/get_helm.sh
  args:
    creates: /usr/local/bin/helm
  when: k3s_role == "server"

- name: Cleanup Helm installation script
  file:
    path: /tmp/get_helm.sh
    state: absent
  when: k3s_role == "server"